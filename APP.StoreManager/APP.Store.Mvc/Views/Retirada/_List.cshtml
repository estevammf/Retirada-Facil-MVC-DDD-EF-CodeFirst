@using APP.Store.Mvc.Helper
@using APP.Store.Mvc.Models
@model IEnumerable<RetiradaViewModel>

    @{
        var listaCaixas = ViewBag.Caixas as List<CaixaViewModel>;
    }


            
            
                <table class="table table-striped text-center">
                    <tbody>
                        <tr class="text-uppercase text-sm">
                            <th>
                                Data e Hora da Retirada
                            </th>
                            <th>
                                Número do Caixa
                            </th>
                            <th>
                                Operador do Caixa
                            </th>
                            <th>
                                Valor Contido no Envelope
                            </th>
                            <th>
                                Identificação do Envelope
                            </th>
                            <th></th>
                        </tr>
@if (Model.Any())
{
    foreach (var item in Model)
     {
         <tr>
             <td>
                 @Html.DisplayFor(modelItem => item.DataHoraRegistro)
             </td>
             <td>
                 <small class="label label-primary">
                     @Html.DisplayFor(modelItem => item.Caixa.NumeroIdentificador)
                 </small>
             </td>
             <td>
                 @Html.DisplayFor(modelItem => item.Caixa.Operador.Nome)
             </td>
             <td>
                 R$ @Html.DisplayFor(modelItem => item.Valor)
             </td>
             <td>
                 @Html.DisplayFor(modelItem => item.NumeroEnvelope)
             </td>
             <td>
                 <div class="btn-group">
                     @{
                         if (Request.IsAuthenticated)
                         {
                             var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
                             if (claimsIdentity != null)
                             {
                                 var claimEditar = claimsIdentity.FindFirst(c => c.Type == "EDITAR_RETIRADA");
                                 var claimRemover = claimsIdentity.FindFirst(c => c.Type == "REMOVER_RETIRADA");

                                 if (claimEditar != null)
                                 {
                                     if (claimEditar.Value == "True")
                                     {
                                         @Html.NoEncodeActionLink("<i class='fa fa-pencil'></i>", "Edit", "Edit", "Retirada", routeValues: new {id = item.Id}, htmlAttributes: new {data_modal = "", @class = "btn btn-default"})
                                     }
                                 }


                                 if (claimRemover != null)
                                 {
                                     if (claimRemover.Value == "True")
                                     {

                                         @Html.NoEncodeActionLink("<i class='fa fa-trash'></i>", "Delete", "Delete", "Retirada", routeValues: new {id = item.Id}, htmlAttributes: new {data_modal = "", @class = "btn btn-default"})

                                     }
                                 }
                             }
                         }
                     }
                 </div>
             </td>
         </tr>
     }
}
else
{
    <tr>Não foram encontradas retiradas nessa data de operação</tr>
}
                    </tbody>
                </table>
            
           
      